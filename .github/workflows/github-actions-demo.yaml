name: GitHub Actions Demo

run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€

on:
  push:
    branches: [ "master" ]

jobs:
  check-file-changes:
    runs-on: ubuntu-latest
    outputs:
      main: ${{ steps.changes.outputs.main }}
      test: ${{ steps.changes.outputs.test }}
      namingtest: ${{ steps.changes.outputs.namingtest }}
    steps:
      - name: checkout the project files
        uses: actions/checkout@v4.1.1
      - name: check for project file changes
        uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          filters: |
            main:
             - 'src/main/**'
            test:
             - 'src/test/**'
            namingtest:
             - 'namingTest/**'
  write-main-changes:
    name: write when main package is changed
    runs-on: ubuntu-latest
    needs: check-file-changes
    if: ${{ needs.check-file-changes.outputs.main == 'true' }}
    steps:
      - run: echo "ðŸŽ‰ The job -> write to main"
  write-test-changes:
    name: write when test package is changed
    runs-on: ubuntu-latest
    needs: check-file-changes
    if: ${{ needs.check-file-changes.outputs.test == 'true' }}
    steps:
      - run: echo "ðŸŽ‰ The job -> write to test"
  #  write-none-changes:
  #    name: write when main and test package are not changed
  #    runs-on: ubuntu-latest
  #    needs: check-file-changes
  #    if: ${{ needs.check-file-changes.outputs.main == 'false' && needs.check-file-changes.outputs.test == 'false' }}
  #    steps:
  #      - run: echo "ðŸŽ‰ The job -> write not to main and test"
  write-naming-test-changes:
    name: write when namingtest package is changed
    runs-on: ubuntu-latest
    needs: check-file-changes
    if: ${{ needs.check-file-changes.outputs.namingtest == 'true' }}
    steps:
      - run: echo "ðŸŽ‰ The job -> write to namingtest"
